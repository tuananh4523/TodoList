/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 *
 * To change the format of this file, modify `createIconDocsNew` in icon-build-process/src/create-icon-docs.tsx.
 *
 * @codegen <<SignedSource::84544bf49025c39c411ebb99cb0b870a>>
 * @codegenCommand yarn build:icon-glyphs
 */
interface metadata {
    /**
     * Default component name for the icon
     */
    componentName: string;
    /**
     * Package path to the icon component
     */
    package: string;
    /**
     * The category of the icon:
     * - 'single-purpose' icons should only be used for the purposes listed in the 'usage' field
     * - 'multi-purpose' icons are designed for various use cases and don't have the same usage restrictions
     * - 'utility' icons are used for utility purposes
     */
    categorization: 'single-purpose' | 'multi-purpose' | 'utility';
    /**
     * The type of the icon - either a 16px 'core' icon, or a 12px 'utility' icon
     */
    type: 'core' | 'utility';
    /**
     * Usage guidelines for the icon. For single-purpose icons,
     */
    usage?: string;
    /**
     * Additional keywords used to assist in search/lookup of an icon
     */
    keywords: string[];
    /**
     * The name of the team owning the icon
     */
    team: string;
    /**
     * The status of the icon
     */
    status?: 'draft' | 'ready-to-publish' | 'published' | 'modified' | 'deprecated';
    /**
     * Contact slack channel for the team owning the icon
     */
    slackChannel?: string;
    /**
     * A list of keys for old icons that have been replaced by this icon
     */
    oldName?: string[];
    /**
     * A replacement icon if this icon has been deprecated
     */
    replacement?: {
        name: string;
        type: 'core' | 'utility';
        location: '@atlaskit/icon' | '@atlaskit/icon-lab' | '@atlassian/icon-private';
    };
    /**
     * Whether the icon should be recommended as a small icon
     */
    shouldRecommendSmallIcon?: boolean;
}
declare const metadata: Record<string, metadata>;
export default metadata;
