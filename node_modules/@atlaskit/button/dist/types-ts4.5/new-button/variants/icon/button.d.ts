import React from 'react';
import { type CommonButtonVariantProps } from '../types';
import { type CommonIconButtonProps } from './types';
export type IconButtonProps = CommonIconButtonProps & CommonButtonVariantProps;
/**
 * __Icon Button__
 *
 * Renders an icon-only button lets people take a common and recognizable action where space is limited.
 *
 * - [Examples](https://atlassian.design/components/button/icon-button/examples)
 * - [Code](https://atlassian.design/components/button/icon-button/code)
 * - [Usage](https://atlassian.design/components/button/icon-button/usage)
 */
declare const IconButton: React.MemoExoticComponent<React.ForwardRefExoticComponent<CommonIconButtonProps & import("../types").AdditionalButtonVariantProps & Omit<Omit<Omit<Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, "children">, "style" | "disabled" | "className">, "data-testid"> & {
    'data-testid'?: never;
}, "onFocus" | "onBlur" | "onClick" | keyof import("../types").CommonBaseProps> & import("../types").CommonBaseProps & {
    onBlur?: React.FocusEventHandler<HTMLButtonElement> | undefined;
    onFocus?: React.FocusEventHandler<HTMLButtonElement> | undefined;
    onClick?: ((e: React.MouseEvent<HTMLButtonElement, MouseEvent>, analyticsEvent: import("@atlaskit/analytics-next").UIAnalyticsEvent) => void) | undefined;
} & React.RefAttributes<HTMLButtonElement>>>;
export default IconButton;
