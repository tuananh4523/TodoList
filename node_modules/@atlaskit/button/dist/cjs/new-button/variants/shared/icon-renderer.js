"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
function isIconRenderProp(func) {
  return !func.displayName &&
  // most function components and class components have a displayName, negate them
  !func.render &&
  // forwardRef doesn't require a display name, however it does include a render function, negate them
  typeof func === 'function' // at the very least we need to be a function
  ;
}

/**
 * __Icon renderer__
 *
 * Used to support render props with icons.
 *
 */
var IconRenderer = function IconRenderer(_ref) {
  var Icon = _ref.icon;
  return (
    /*#__PURE__*/
    // @ts-ignore - TS2322 TypeScript 5.9.2 upgrade
    _react.default.createElement(_react.default.Fragment, null, isIconRenderProp(Icon) ? Icon({
      label: '',
      color: 'currentColor'
    }) : /*#__PURE__*/_react.default.createElement(Icon, {
      label: "",
      color: 'currentColor'
    }))
  );
};
var _default = exports.default = IconRenderer;