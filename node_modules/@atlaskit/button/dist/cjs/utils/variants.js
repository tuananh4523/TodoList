"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkButtonVariants = exports.iconButtonVariants = exports.iconButtonShapes = exports.defaultButtonVariants = exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _starFilled = _interopRequireDefault(require("@atlaskit/icon/glyph/star-filled"));
var _button = _interopRequireDefault(require("../new-button/variants/default/button"));
var _link = _interopRequireDefault(require("../new-button/variants/default/link"));
var _button2 = _interopRequireDefault(require("../new-button/variants/icon/button"));
var _link2 = _interopRequireDefault(require("../new-button/variants/icon/link"));
var _appearances = require("./appearances");
var _spacing = require("./spacing");
var _excluded = ["href", "children"],
  _excluded2 = ["icon", "label"],
  _excluded3 = ["href", "icon", "label"];
/* eslint-disable @atlaskit/design-system/no-legacy-icons -- TODO - https://product-fabric.atlassian.net/browse/DSP-20398 */
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var iconButtonShapes = exports.iconButtonShapes = ['default', 'circle'];
// Add required default props to variants
var LinkButtonRender = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var _ref$href = _ref.href,
    href = _ref$href === void 0 ? 'home' : _ref$href,
    children = _ref.children,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return /*#__PURE__*/_react.default.createElement(_link.default, (0, _extends2.default)({
    ref: ref,
    href: href
  }, rest), children);
});
var IconButtonRender = /*#__PURE__*/(0, _react.forwardRef)(function (_ref2, ref) {
  var _ref2$icon = _ref2.icon,
    icon = _ref2$icon === void 0 ? _starFilled.default : _ref2$icon,
    _ref2$label = _ref2.label,
    label = _ref2$label === void 0 ? 'Label' : _ref2$label,
    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  return /*#__PURE__*/_react.default.createElement(_button2.default, (0, _extends2.default)({
    ref: ref,
    icon: icon,
    label: label
  }, rest));
});
var LinkIconButtonRender = /*#__PURE__*/(0, _react.forwardRef)(function (_ref3, ref) {
  var _ref3$href = _ref3.href,
    href = _ref3$href === void 0 ? 'home' : _ref3$href,
    _ref3$icon = _ref3.icon,
    icon = _ref3$icon === void 0 ? _starFilled.default : _ref3$icon,
    _ref3$label = _ref3.label,
    label = _ref3$label === void 0 ? 'Label' : _ref3$label,
    rest = (0, _objectWithoutProperties2.default)(_ref3, _excluded3);
  return /*#__PURE__*/_react.default.createElement(_link2.default, (0, _extends2.default)({
    ref: ref,
    href: href,
    icon: icon,
    label: label
  }, rest));
});
var variants = [{
  name: 'Button',
  Component: _button.default,
  elementType: HTMLButtonElement,
  appearances: _appearances.buttonAppearances,
  spacing: _spacing.buttonSpacing
}, {
  name: 'LinkButton',
  Component: LinkButtonRender,
  elementType: HTMLAnchorElement,
  appearances: _appearances.linkButtonAppearances,
  spacing: _spacing.buttonSpacing
}, {
  name: 'IconButton',
  Component: IconButtonRender,
  elementType: HTMLButtonElement,
  appearances: _appearances.iconButtonAppearances,
  spacing: _spacing.iconButtonSpacing,
  shape: iconButtonShapes
}, {
  name: 'LinkIconButton',
  Component: LinkIconButtonRender,
  elementType: HTMLAnchorElement,
  appearances: _appearances.iconButtonAppearances,
  spacing: _spacing.iconButtonSpacing,
  shape: iconButtonShapes
}];
var defaultButtonVariants = exports.defaultButtonVariants = variants.filter(function (_ref4) {
  var name = _ref4.name;
  return name === 'Button' || name === 'LinkButton';
});
var linkButtonVariants = exports.linkButtonVariants = variants.filter(function (_ref5) {
  var name = _ref5.name;
  return name === 'LinkButton' || name === 'LinkIconButton';
});
var iconButtonVariants = exports.iconButtonVariants = variants.filter(function (_ref6) {
  var name = _ref6.name;
  return name === 'IconButton' || name === 'LinkIconButton';
});
var _default = exports.default = variants;