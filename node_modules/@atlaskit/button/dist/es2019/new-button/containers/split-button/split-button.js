/* split-button.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./split-button.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { fg } from '@atlaskit/platform-feature-flags';
import { SplitButtonContext } from './split-button-context';
import { getActions } from './utils';
const dividerStyles = {
  baseDivider: "_1bsbe4h9 _kqswh2mm _1pbykb7n",
  dividerDisabled: "_bfhkojnm _80om13gf _tzy41uwv",
  dividerDisabledRefreshed: "_bfhk9xzm _80om13gf",
  dividerOffsetRefreshed: "_195g1n1a"
};
const dividerAppearanceStyles = {
  default: "_bfhk1fxt _tzy41uwv",
  primary: "_bfhk15cr _tzy41wzo",
  navigation: "_1mouu2gc _195g1h5n _4t3i7vkz _bfhkdud1 _tzy419lr"
};
const dividerRefreshedAppearanceStyles = {
  default: "_bfhkmuej",
  primary: "_bfhkveue _tzy41wzo",
  navigation: "_1mouu2gc _195g1h5n _4t3i7vkz _bfhkdud1 _tzy419lr"
};
const dividerHeightStyles = {
  default: "_4t3iviql",
  compact: "_4t3i1k8s"
};

// The divider height is calculated by subtracting twice the border width from the button height.
// This ensures the divider does not intersect with the button's border, avoiding visual issues
// caused by overlapping alpha colors (color.border) at the intersection.
const defaultDividerHeightStyles = {
  default: "_4t3im1ee",
  compact: "_4t3i1hvu"
};
/**
 * TODO: Add JSDoc
 */
export const Divider = ({
  appearance,
  spacing,
  isDisabled = false
}) => {
  const isDefaultDivider = appearance === 'default' && !isDisabled && fg('platform-component-visual-refresh');
  return /*#__PURE__*/React.createElement("div", {
    className: ax([dividerStyles.baseDivider, isDefaultDivider && defaultDividerHeightStyles[spacing], !isDefaultDivider && dividerHeightStyles[spacing], isDisabled && fg('platform-component-visual-refresh') && dividerStyles.dividerDisabledRefreshed, isDisabled && !fg('platform-component-visual-refresh') && dividerStyles.dividerDisabled, !isDisabled && fg('platform-component-visual-refresh') && dividerRefreshedAppearanceStyles[appearance], !isDisabled && !fg('platform-component-visual-refresh') && dividerAppearanceStyles[appearance], fg('platform-component-visual-refresh') && dividerStyles.dividerOffsetRefreshed])
  });
};
const buttonStyles = {
  splitButton: "_1e0c116y _kqswh2mm _4cvr1h6o _o5721q9c",
  primaryButton: "_traeidpf _anlpidpf _p9ykidpf _bepvidpf",
  secondaryButton: "_1j4hidpf _1553idpf _1qgbidpf _y1n3idpf",
  defaultAppearanceContainer: "_2rko1sit _12jimuej _1cwg1n1a _1qu2nqa1 _12y3t94y",
  defaultAppearanceDisabledContainer: "_12ji13gt"
};

/**
 * TODO: Add JSdoc
 */
export const SplitButtonContainer = ({
  appearance,
  children,
  isDisabled = false
}) => {
  return /*#__PURE__*/React.createElement("div", {
    className: ax([appearance === 'default' && fg('platform-component-visual-refresh') && buttonStyles.defaultAppearanceContainer, appearance === 'default' && isDisabled && fg('platform-component-visual-refresh') && buttonStyles.defaultAppearanceDisabledContainer, buttonStyles.splitButton])
  }, children);
};

/**
 * __Split Button__
 *
 * A split button lets people perform an action or choose from a small group of similar actions.
 *
 * - [Examples](https://atlassian.design/components/button/split-button/examples)
 * - [Code](https://atlassian.design/components/button/split-button/code)
 * - [Usage](https://atlassian.design/components/button/split-button/usage)
 */
export const SplitButton = ({
  children,
  appearance = 'default',
  spacing = 'default',
  isDisabled = false
}) => {
  const {
    PrimaryAction,
    SecondaryAction
  } = getActions(children);
  return /*#__PURE__*/React.createElement(SplitButtonContainer, {
    appearance: appearance,
    isDisabled: isDisabled
  }, /*#__PURE__*/React.createElement(SplitButtonContext.Provider, {
    value: {
      appearance,
      spacing,
      isDisabled
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: ax([buttonStyles.primaryButton])
  }, PrimaryAction), /*#__PURE__*/React.createElement(Divider, {
    appearance: appearance,
    spacing: spacing,
    isDisabled: isDisabled
  }), /*#__PURE__*/React.createElement("div", {
    className: ax([buttonStyles.secondaryButton])
  }, SecondaryAction)));
};
// TODO: Fill in the component {description} and ensure links point to the correct {packageName} location.
// Remove links that the component does not have (such as usage). If there are no links remove them all.
/**
 * __Split button with slots__
 *
 * A split button with slots {description}.
 *
 * - [Examples](https://atlassian.design/components/{packageName}/examples)
 * - [Code](https://atlassian.design/components/{packageName}/code)
 * - [Usage](https://atlassian.design/components/{packageName}/usage)
 */
export const SplitButtonWithSlots = ({
  primaryAction,
  secondaryAction,
  appearance = 'default',
  spacing = 'default',
  isDisabled = false
}) => {
  return /*#__PURE__*/React.createElement(SplitButtonContainer, {
    appearance: appearance,
    isDisabled: isDisabled
  }, /*#__PURE__*/React.createElement(SplitButtonContext.Provider, {
    value: {
      appearance,
      spacing,
      isDisabled
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: ax([buttonStyles.primaryButton])
  }, primaryAction), /*#__PURE__*/React.createElement(Divider, {
    appearance: appearance,
    spacing: spacing,
    isDisabled: isDisabled
  }), /*#__PURE__*/React.createElement("div", {
    className: ax([buttonStyles.secondaryButton])
  }, secondaryAction)));
};