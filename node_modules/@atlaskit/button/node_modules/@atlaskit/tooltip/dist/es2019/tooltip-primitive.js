/* tooltip-primitive.tsx generated by @compiled/babel-plugin v0.36.1 */
import "./tooltip-primitive.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { forwardRef } from 'react';
const primitiveStyles = null;

/**
 * The lower level component for rendering a tooltip.
 */
const TooltipPrimitive = /*#__PURE__*/forwardRef(function TooltipPrimitive({
  style,
  className,
  children,
  placement,
  testId,
  onMouseOut,
  onMouseOver,
  id
}, ref) {
  return /*#__PURE__*/React.createElement("div", {
    ref: ref
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: style,
    "data-testid": testId ? `${testId}--wrapper` : undefined
  }, /*#__PURE__*/React.createElement("div", {
    role: "tooltip"
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: ax(["_80om73ad", className])
    // Because the tooltip should not be focusable, there is no reason to have key events.
    /* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */,
    onMouseOut: onMouseOut
    /* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */,
    onMouseOver: onMouseOver,
    "data-placement": placement,
    "data-testid": testId,
    id: id
  }, children));
});
TooltipPrimitive.displayName = 'TooltipPrimitive';
export default TooltipPrimitive;