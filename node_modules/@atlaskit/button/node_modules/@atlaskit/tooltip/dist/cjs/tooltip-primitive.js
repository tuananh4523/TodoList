/* tooltip-primitive.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("./tooltip-primitive.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var primitiveStyles = null;

/**
 * The lower level component for rendering a tooltip.
 */
var TooltipPrimitive = /*#__PURE__*/(0, _react.forwardRef)(function TooltipPrimitive(_ref, ref) {
  var style = _ref.style,
    className = _ref.className,
    children = _ref.children,
    placement = _ref.placement,
    testId = _ref.testId,
    onMouseOut = _ref.onMouseOut,
    onMouseOver = _ref.onMouseOver,
    id = _ref.id;
  return /*#__PURE__*/React.createElement("div", {
    ref: ref
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: style,
    "data-testid": testId ? "".concat(testId, "--wrapper") : undefined
  }, /*#__PURE__*/React.createElement("div", {
    role: "tooltip"
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: (0, _runtime.ax)(["_80om73ad", className])
    // Because the tooltip should not be focusable, there is no reason to have key events.
    /* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */,
    onMouseOut: onMouseOut
    /* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */,
    onMouseOver: onMouseOver,
    "data-placement": placement,
    "data-testid": testId,
    id: id
  }, children));
});
TooltipPrimitive.displayName = 'TooltipPrimitive';
var _default = exports.default = TooltipPrimitive;