/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { forwardRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import invariant from 'tiny-invariant';
import { metricTextSizeStylesMap } from '../xcss/style-maps.partial';
const asAllowlist = ['span', 'div'];
// We're doing this because our CSS reset can add top margins to elements such as `p` which is totally insane.
// Long term we should remove those instances from the reset - it should be a reset to 0.
// For now, at least we know <MetricText> will be unaffected by this.
const resetStyles = css({
  margin: 0
});
const textAlignMap = {
  center: css({
    textAlign: 'center'
  }),
  end: css({
    textAlign: 'end'
  }),
  start: css({
    textAlign: 'start'
  })
};

/**
 * __MetricText__
 *
 * MetricText is a primitive component that has the Atlassian Design System's design guidelines baked in.
 * It is designed for use specifically with displaying metrics and is not to be used for headings or general UI text.
 * It renders a `span` by default.
 *
 * @internal
 */
const MetricText = /*#__PURE__*/forwardRef(({
  as: Component = 'span',
  align,
  testId,
  id,
  size,
  children
}, ref) => {
  invariant(asAllowlist.includes(Component), `@atlaskit/primitives: MetricText received an invalid "as" value of "${Component}"`);
  const component = jsx(Component, {
    ref: ref,
    css: [resetStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
    size && metricTextSizeStylesMap[size], align && textAlignMap[align]],
    "data-testid": testId,
    id: id
  }, children);
  return component;
});
export default MetricText;